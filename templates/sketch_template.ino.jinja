#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>
#include <PZEM004Tv30.h>

PZEM004Tv30 pzem(12, 13);
const char* serverName = "http://192.168.1.5:5000/postData";

void setup() {
  Serial.begin(9600);
  WiFi.begin("{{ wifi_name }}", "{{ password }}");
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi..");
  }
  Serial.println("Connected to WiFi");
}

void loop() {
  float volt = pzem.voltage();
  float curr = pzem.current();
  float powe = pzem.power();
  float ener = pzem.energy();
  float freq = pzem.frequency();
  float pf = pzem.pf();

  if (isnan(volt)) {
    volt = 0;
    curr = 0;
    powe = 0;
    ener = 0;
    pf = 0;
    freq = 0;
  }

  // Create JSON payload
  String jsonData = "{\"voltage\": " + String(volt) +
                    ", \"current\": " + String(curr) +
                    ", \"power\": " + String(powe) +
                    ", \"energy\": " + String(ener) +
                    ", \"frequency\": " + String(freq) +
                    ", \"powerFactor\": " + String(pf) +
                    ", \"device_id\": " + String({{ device_id }}) +
                    "}";

  // Create a WiFiClient object
  WiFiClient wifiClient;
  HTTPClient http;
  http.begin(wifiClient, serverName); // Specify the URL and WiFiClient

  http.addHeader("Content-Type", "application/json");

  int httpResponseCode = http.POST(jsonData);

  if (httpResponseCode > 0) {
    String response = http.getString(); // Get the response to the request
    Serial.println("POST request successful");
    Serial.print("HTTP Response code: ");
    Serial.println(httpResponseCode);
    Serial.print("Response: ");
    Serial.println(response);
  } else {
    Serial.print("Error on sending POST: ");
    Serial.println(httpResponseCode);
  }

  http.end(); // Free resources

  Serial.printf("%.1f V\t%.3f A\t%.1f W\t%.4f kWh\t%.2f Hz\t%.3f pf\n", volt, curr, powe, ener, freq, pf);
  delay(1000); // Adjust delay as needed
}